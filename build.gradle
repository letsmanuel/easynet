buildscript {
    repositories {
        maven {
            url = 'https://maven.fabricmc.net/' // Loom repo
        }
        mavenCentral()
        gradlePluginPortal()
    }
    dependencies {
        classpath 'net.fabricmc:fabric-loom:1.9.2'
    }
}

apply plugin: 'fabric-loom'
apply plugin: 'maven-publish'

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

repositories {
	mavenCentral()
	maven { url = "https://maven.fabricmc.net/" }
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	modImplementation "net.fabricmc.fabric-api:fabric-api:0.99.5+1.21"
	// Add more APIs as needed from https://github.com/FabricMC/fabric#modules
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": inputs.properties.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 21
}

java {
	withSourcesJar()
	sourceCompatibility = JavaVersion.VERSION_21
	targetCompatibility = JavaVersion.VERSION_21
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archives_base_name}" }
	}
	
	// Keep classes unobfuscated for library usage
	archiveClassifier = 'dev'
}

// Disable remapping tasks to prevent obfuscation/class name changes
remapJar.enabled = false
remapSourcesJar.enabled = false

publishing {
	publications {
		create("mavenJava", MavenPublication) {
			groupId = project.maven_group
			artifactId = project.archives_base_name
			version = project.mod_version
			
			from components.java
			
			// Publish the unobfuscated jar for development use
			artifact jar
			artifact sourcesJar
		}
	}
	
	// Optional: Configure repositories for publishing
	repositories {
		// Add your publishing repositories here if needed
		// Example for GitHub Packages:
		// maven {
		//     name = "GitHubPackages"
		//     url = "https://maven.pkg.github.com/yourusername/yourrepo"
		//     credentials {
		//         username = project.findProperty("gpr.user") ?: System.getenv("USERNAME")
		//         password = project.findProperty("gpr.key") ?: System.getenv("TOKEN")
		//     }
		// }
	}
}
